{"version":3,"sources":["App.tsx"],"names":["App","Permissions","ask","permission","askForPermission","useState","Camera","Constants","Type","back","type","scanned","setScanned","status","style","styles","container","camera","barCodeScannerSettings","barCodeTypes","BarCodeScanner","BarCodeType","qr","onBarCodeScanned","undefined","data","alert","title","onPress","StyleSheet","create","flex"],"mappings":"0NAOe,SAASA,IACtB,MAAuCC,IAA2BA,IAAoB,CAACC,KAAK,IAA5F,WAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAwBC,mBAASC,IAAOC,UAAUC,KAAKC,MAAvD,WAAOC,EAAP,KACA,GADA,KAC8BL,oBAAS,IAAvC,WAAOM,EAAP,KAAgBC,EAAhB,KAOA,OAAKT,GAAoC,YAAtBA,EAAWU,OAS5B,kBAAC,IAAD,CAAMC,MAAOC,EAAOC,WAClB,kBAAC,IAAD,CACEF,MAAOC,EAAOE,OACdP,KAAMA,EAENQ,uBAAwB,CACtBC,aAAc,CAACC,IAAeb,UAAUc,YAAYC,KAEtDC,iBAAkBZ,OAAUa,EAtBZ,SAAC,GAAiB,EAAhBd,KAAiB,IAAXe,EAAU,EAAVA,KAC5Bb,GAAW,GACXc,MAAM,QAAQD,KAsBV,kBAAC,IAAD,eAEDd,GAAW,kBAAC,IAAD,CAAQgB,MAAO,YAAaC,QAAS,WAAKhB,GAAW,OAC/DD,GAAW,kBAAC,IAAD,CAAQgB,MAAO,aAAcC,QAAS,kBAAIF,MAAM,sBApB7D,kBAAC,IAAD,KACE,kBAAC,IAAD,uCACA,kBAAC,IAAD,CAAQC,MAAM,iBAAiBC,QAASxB,KAuBhD,IAAMW,EAASc,IAAWC,OAAO,CAC/Bd,UAAW,CACTe,KAAM,GAERd,OAAQ,CACNc,KAAM,M","file":"static/js/app.97af1a3d.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, View, Button } from 'react-native';\r\nimport { Camera } from 'expo-camera';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport * as Permissions from 'expo-permissions';\r\n\r\nexport default function App() {\r\n  const [permission, askForPermission] = Permissions.usePermissions(Permissions.CAMERA, {ask: true});\r\n  const [type, setType] = useState(Camera.Constants.Type.back);\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  const handleScanned = ({type, data}) => {\r\n    setScanned(true);\r\n    alert(`Get: ${data}`);\r\n  }\r\n\r\n  if (!permission || permission.status !== 'granted') {\r\n    return (\r\n      <View>\r\n        <Text>No access permission to camera</Text>\r\n        <Button title=\"Get permission\" onPress={askForPermission} />\r\n      </View>\r\n    );\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <Camera\r\n        style={styles.camera}\r\n        type={type}\r\n        // focusDepth={1}\r\n        barCodeScannerSettings={{\r\n          barCodeTypes: [BarCodeScanner.Constants.BarCodeType.qr],\r\n        }}\r\n        onBarCodeScanned={scanned ? undefined : handleScanned}\r\n      >\r\n        <Text>0.0.8</Text>\r\n      </Camera>\r\n      {scanned && <Button title={'Try again'} onPress={()=>{setScanned(false)}} />}\r\n      {!scanned && <Button title={'waiting...'} onPress={()=>alert(\"version: 0.0.9\")} />}\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1\r\n  },\r\n  camera: {\r\n    flex: 1\r\n  }\r\n});\r\n"],"sourceRoot":""}