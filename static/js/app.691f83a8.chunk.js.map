{"version":3,"sources":["App.tsx","res/sample.svg"],"names":["App","useState","permission","setHasPermission","Camera","Constants","Type","back","type","isReady","setIsReady","camera","setCamera","photoMode","setPhotoMode","mode","setMode","scanned","setScanned","autoFocus","setAutoFocus","zoom","setZoom","whiteBal","setWhiteBal","focusDepth","setFocusDepth","Date","dayjs","NOW","useEffect","a","async","requestCameraPermissionsAsync","status","whiteBalanceEnum","WhiteBalance","auto","continuous","style","styles","container","camContainer","ref","whiteBalance","onCameraReady","barCodeScannerSettings","undefined","barCodeTypes","BarCodeScanner","BarCodeType","qr","onBarCodeScanned","data","alert","height","minHeight","title","onPress","paramContainer","button","param","z","takePictureAsync","quality","pic","scanFromURLAsync","uri","then","result","catch","error","marginVertical","width","source","require","StyleSheet","create","alignItems","flexDirection","justifyContent","flexWrap","maxWidth","marginTop","textAlign","backgroundColor","borderRadius","color","module","exports"],"mappings":"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","file":"static/js/app.691f83a8.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { StyleSheet, Text, View, Button, Image, TouchableOpacity } from 'react-native';\r\nimport { Camera } from 'expo-camera';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport * as Permissions from 'expo-permissions';\r\nimport dayjs from 'dayjs';\r\n\r\nexport default function App() {\r\n  const [permission, setHasPermission] = useState(false);\r\n  // const [permission, askForPermission] = Permissions.usePermissions(Permissions.CAMERA, {ask: true});\r\n  // const [scanPermission, setScanPermission] = useState<boolean | null>(null);\r\n  const [type, setType] = useState(Camera.Constants.Type.back);\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [camera, setCamera] = useState<Camera | null>(null);\r\n  const [photoMode, setPhotoMode] = useState(false);\r\n  const [mode, setMode] = useState(\"Scan mode\");\r\n  const [scanned, setScanned] = useState(false);\r\n  const [autoFocus, setAutoFocus] = useState(true);\r\n  const [zoom, setZoom] = useState(0);\r\n  const [whiteBal, setWhiteBal] = useState(0);\r\n  const [focusDepth, setFocusDepth] = useState(0);\r\n\r\n  const d = new Date(\"2022-02-05T13:50:00\");\r\n  const now = dayjs(NOW);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await Camera.requestCameraPermissionsAsync();\r\n      setHasPermission(status === \"granted\");\r\n    })();\r\n  }, []);\r\n\r\n  const whiteBalanceEnum = [\r\n    Camera.Constants.WhiteBalance.auto,\r\n    Camera.Constants.WhiteBalance.continuous\r\n  ];\r\n\r\n  const switchZoom = () => {\r\n    var z = zoom + 0.25;\r\n    if (z > 1) z = 0;\r\n    setZoom(z);\r\n  }\r\n\r\n  const switchFocusDepth = () => {\r\n    var z = focusDepth + 0.25;\r\n    if (z > 1) z = 0;\r\n    setFocusDepth(z);\r\n  }\r\n\r\n  const switchWhiteBalance = () => {\r\n    var z = whiteBal + 1;\r\n    if (z > 1) z = 0;\r\n    setWhiteBal(z);\r\n  }\r\n\r\n  const handleScanned = ({type, data}) => {\r\n    setScanned(true);\r\n    alert(`Get: ${data}`);\r\n  }\r\n\r\n  const handleTakingPhoto = async () => {\r\n    if (camera) {\r\n      const pic = await camera.takePictureAsync({\r\n        quality: 1\r\n      });\r\n      await BarCodeScanner.scanFromURLAsync(pic.uri, [BarCodeScanner.Constants.BarCodeType.qr])\r\n      .then((result) => {\r\n        alert(`Get: ${result[0].data}`);\r\n      })\r\n      .catch((error) => {\r\n        alert(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  if (permission===null) {\r\n    return <View><Text>Loading...</Text></View>;\r\n  }\r\n  if (permission===false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.camContainer}>\r\n        <Camera\r\n          ref={(ref) => setCamera(ref)}\r\n          type={type}\r\n          autoFocus={autoFocus}\r\n          zoom={zoom}\r\n          whiteBalance={whiteBalanceEnum[whiteBal]}\r\n          focusDepth={focusDepth}\r\n          onCameraReady={() => setIsReady(true)}\r\n          barCodeScannerSettings={photoMode ? undefined : {\r\n            barCodeTypes: [BarCodeScanner.Constants.BarCodeType.qr],\r\n          }}\r\n          onBarCodeScanned={(scanned || photoMode) ? undefined : handleScanned}\r\n          style={{height:400, minHeight:400}}\r\n        />\r\n        {scanned && <Button title={'Press to try again'} onPress={()=>{setScanned(false)}} />}\r\n        {!scanned && <Button title={mode} onPress={()=>alert(mode)} />}\r\n      </View>\r\n      <View style={styles.paramContainer}>\r\n          <TouchableOpacity style={styles.button} onPress={() => setAutoFocus(!autoFocus)}>\r\n            <Text style={styles.param}>Auto focus: {autoFocus ? \"ON\" : \"OFF\"}</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.button} onPress={switchFocusDepth}>\r\n            <Text style={styles.param}>Focus depth: {focusDepth}</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.button} onPress={switchZoom}>\r\n            <Text style={styles.param}>Zoom: {zoom}</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.button} onPress={switchWhiteBalance}>\r\n            <Text style={styles.param}>White balance:</Text>\r\n            <Text style={styles.param}>{whiteBalanceEnum[whiteBal]}</Text>\r\n          </TouchableOpacity>\r\n          {isReady && <TouchableOpacity\r\n            style={styles.button}\r\n            onPress={() => {setPhotoMode(!photoMode);setMode(mode==\"Scan mode\" ? \"Photo mode\" : \"Scan mode\")}}>\r\n            <Text style={styles.param}>Photo mode:</Text>\r\n            <Text style={styles.param}>{photoMode ? \"ON\" : \"OFF\"}</Text>\r\n          </TouchableOpacity>}\r\n          {photoMode && <TouchableOpacity style={styles.button} onPress={handleTakingPhoto}>\r\n            <Text style={styles.param}>Take photo</Text>\r\n          </TouchableOpacity>}\r\n      </View>\r\n      <View style={{marginVertical: 20}}>\r\n        <Image style={{width: 239, height: 222}} source={require('./res/sample.svg')} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: '100%',\r\n    height: '100%',\r\n    alignItems: 'center'\r\n  },\r\n  camContainer: {\r\n    width: '100%',\r\n    height: '70%'\r\n  },\r\n  paramContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap'\r\n  },\r\n  button: {\r\n    width: '45%',\r\n    maxWidth: '45%',\r\n    height: 60,\r\n    marginTop: 12,\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n    backgroundColor: '#1572a1',\r\n    borderRadius: 12\r\n  },\r\n  param: {\r\n    color: 'white'\r\n  }\r\n});\r\n","module.exports = __webpack_public_path__ + \"static/media/sample.2df02904.svg\";"],"sourceRoot":""}