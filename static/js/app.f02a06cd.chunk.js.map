{"version":3,"sources":["App.tsx"],"names":["App","useState","hasPermission","setHasPermission","Camera","Constants","Type","back","type","scanned","setScanned","useEffect","a","async","requestPermissionsAsync","status","style","styles","container","camera","onBarCodeScanned","undefined","data","alert","title","onPress","StyleSheet","create","flex"],"mappings":"iNAKe,SAASA,IACtB,MAA0CC,oBAAS,GAAnD,WAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAwBF,mBAASG,IAAOC,UAAUC,KAAKC,MAAvD,WAAOC,EAAP,KACA,GADA,KAC8BP,oBAAS,IAAvC,WAAOQ,EAAP,KAAgBC,EAAhB,KAcA,OAPAC,qBAAU,YACR,WAAC,UAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAC0BR,IAAOU,2BADjC,gBACSC,EADT,EACSA,OACRZ,EAA4B,YAAXY,GAFlB,4DAAD,KAIC,IAEmB,OAAlBb,EACK,kBAAC,IAAD,OAEa,IAAlBA,EACK,kBAAC,IAAD,4BAGP,kBAAC,IAAD,CAAMc,MAAOC,EAAOC,WAClB,kBAAC,IAAD,CACEF,MAAOC,EAAOE,OACdX,KAAMA,EACNY,iBAAkBX,OAAUY,EAvBZ,SAAC,GAAiB,EAAhBb,KAAiB,IAAXc,EAAU,EAAVA,KAC5BZ,GAAW,GACXa,MAAM,QAAQD,KAuBV,kBAAC,IAAD,eAEDb,GAAW,kBAAC,IAAD,CAAQe,MAAO,YAAaC,QAAS,WAAKf,GAAW,OAKvE,IAAMO,EAASS,IAAWC,OAAO,CAC/BT,UAAW,CACTU,KAAM,GAERT,OAAQ,CACNS,KAAM,M","file":"static/js/app.f02a06cd.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState, useEffect} from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport { Camera } from 'expo-camera';\n\nexport default function App() {\n  const [hasPermission, setHasPermission] = useState(false);\n  const [type, setType] = useState(Camera.Constants.Type.back);\n  const [scanned, setScanned] = useState(false);\n\n  const handleScanned = ({type, data}) => {\n    setScanned(true);\n    alert(`Get: ${data}`);\n  }\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await Camera.requestPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return <View />;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n  return (\n    <View style={styles.container}>\n      <Camera\n        style={styles.camera}\n        type={type}\n        onBarCodeScanned={scanned ? undefined : handleScanned}\n      >\n        <Text>0.0.1</Text>\n      </Camera>\n      {scanned && <Button title={'Try again'} onPress={()=>{setScanned(false)}} />}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  camera: {\n    flex: 1\n  }\n});\n"],"sourceRoot":""}